kind: PersistentVolume
apiVersion: v1
metadata:
  name: jenkins-volume
  labels:
    type: local
spec:
  capacity:
    storage: 2Gi
  storageClassName: standard  
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/jenkins/
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jenkins-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi   
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-app
  labels:
    app: jenkins-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-app
  template:
    metadata:
      labels:
        app: jenkins-app
    spec:
      securityContext:
        runAsUser: 0
        # fsGroup: 1000
      containers:
      - name: jenkins-app
        image: laxmi.azurecr.io/ash-jenkins-docker:v119
        imagePullPolicy: Always
        env:
        - name: JAVA_OPTS
          value: -Xmx2048m -Dhudson.slaves.NodeProvisioner.MARGIN=50 -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85
        ports:
        - name: http-port
          containerPort: 8080
        - name: jnlp-port
          containerPort: 50000
        volumeMounts:
          - name: jenkins-home
            mountPath: /var/jenkins_home
          - name: docker-sock
            mountPath: /var/run/docker.sock
          - mountPath: /var/lib/docker
            name: docker-directory
        securityContext:
          privileged: true
          runAsUser: 0
      volumes:
      - name: jenkins-home
        persistentVolumeClaim:
          claimName: jenkins-claim
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
      - name: docker-directory
        hostPath:
          path: /var/lib/docker    
      dnsPolicy: ClusterFirst
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  selector:
    app: jenkins-app
  type: LoadBalancer  
  ports:
  - name: ui
    port: 8080
    protocol: TCP
    targetPort: 8080
    nodePort: 30005
  - name: slave
    port: 50000
    protocol: TCP
    targetPort: 50000
    nodePort: 30004

---
# apiVersion: v1
# kind: Service
# metadata:
#   name: jenkins-jnlp-service
#   labels:
#     app: jenkins-jnlp-service
# spec:
#   selector:
#     app: jenkins-app
#   type: LoadBalancer  
#   ports:
#   - port: 50000
#     protocol: TCP
#     targetPort: 50000  

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jenkins
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edit
subjects:
- kind: ServiceAccount
  name: default
  namespace: default